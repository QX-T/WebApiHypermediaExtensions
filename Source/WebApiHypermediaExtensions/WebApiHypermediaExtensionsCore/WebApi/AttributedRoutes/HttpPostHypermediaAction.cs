using System;
using Microsoft.AspNetCore.Mvc;
using WebApiHypermediaExtensionsCore.Hypermedia.Actions;

namespace WebApiHypermediaExtensionsCore.WebApi.AttributedRoutes
{
    [AttributeUsage(AttributeTargets.Method, Inherited = false)]
    public class HttpPostHypermediaAction : HttpPostAttribute, IHaveRouteInfo
    {
        public Type RouteType { get; private set; }
        public Type RouteKeyProducerType { get; } = null;
        /// <summary>
        /// Indicates that this route will accept posts generated by the corresponding HypermediaAction used in HypermediaObjects.
        /// Each action in a Object must be matched by a route. No other route my have the same type. A action route must be always a subroute of an HypermediaObject.
        /// </summary>
        /// <param name="routeType">type of the HypermediaAction as used in the HypermediaObject</param>
        public HttpPostHypermediaAction(Type routeType)
        {
            Init(routeType);
        }

        /// <summary>
        /// Indicates that this route will accept posts generated by the corresponding HypermediaAction used in HypermediaObjects.
        /// Each action in a Object must be matched by a route. No other route my have the same type. A action route must be always a subroute of an HypermediaObject.
        /// </summary>
        /// <param name="template">The route template.</param>
        /// <param name="routeType">type of the HypermediaAction as used in the HypermediaObject</param>
        public HttpPostHypermediaAction(string template, Type routeType) : base(template)
        {
            Init(routeType);
        }

        private void Init(Type routeType)
        {
            AttributedRouteHelper.EnsureIs<HypermediaActionBase>(routeType);

            var buildName = "GenericRouteName_HypermediaAction" + "_" + routeType;
            buildName = AttributedRouteHelper.EscapeRouteName(buildName);

            Name = buildName;
            RouteType = routeType;
        }
    }
}